// Code generated by go-swagger; DO NOT EDIT.

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/MarlikAlmighty/library/pkg/models"
)

// DeleteBookReader is a Reader for the DeleteBook structure.
type DeleteBookReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBookReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteBookOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteBookBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteBookOK creates a DeleteBookOK with default headers values
func NewDeleteBookOK() *DeleteBookOK {
	return &DeleteBookOK{}
}

/* DeleteBookOK describes a response with status code 200, with default header values.

OK
*/
type DeleteBookOK struct {
}

func (o *DeleteBookOK) Error() string {
	return fmt.Sprintf("[DELETE /book/{id}][%d] deleteBookOK ", 200)
}

func (o *DeleteBookOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBookBadRequest creates a DeleteBookBadRequest with default headers values
func NewDeleteBookBadRequest() *DeleteBookBadRequest {
	return &DeleteBookBadRequest{}
}

/* DeleteBookBadRequest describes a response with status code 400, with default header values.

Bad request
*/
type DeleteBookBadRequest struct {
	Payload *models.Fail
}

func (o *DeleteBookBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /book/{id}][%d] deleteBookBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteBookBadRequest) GetPayload() *models.Fail {
	return o.Payload
}

func (o *DeleteBookBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Fail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

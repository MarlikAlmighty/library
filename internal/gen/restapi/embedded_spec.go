// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Simple Library API Server",
    "title": "Library API",
    "contact": {
      "email": "cryptocoin62@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "home"
        ],
        "summary": "Root of project",
        "operationId": "home",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Get book by id",
        "operationId": "get_book_by_id",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "books"
        ],
        "summary": "Delete book",
        "operationId": "delete_book",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/bookcases": {
      "get": {
        "tags": [
          "bookcases"
        ],
        "summary": "Show all bookcases",
        "operationId": "list_all_bookcases",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BookCases"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "bookcases"
        ],
        "summary": "Update an existing bookcase",
        "operationId": "put_bookcase",
        "parameters": [
          {
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookCase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "bookcases"
        ],
        "summary": "Add bookcase",
        "operationId": "add_bookcase",
        "parameters": [
          {
            "name": "add",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookCase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/bookcases/{id}": {
      "get": {
        "tags": [
          "bookcases"
        ],
        "summary": "List all books in bookcase",
        "operationId": "list_all_books_from_bookcases",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bookcases"
        ],
        "summary": "Delete bookcase",
        "operationId": "delete_bookcase",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Show all books",
        "operationId": "list_all_books",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "books"
        ],
        "summary": "Update an existing book",
        "operationId": "put_book",
        "parameters": [
          {
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "books"
        ],
        "summary": "Add book",
        "operationId": "add_book",
        "parameters": [
          {
            "name": "add",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "properties": {
        "Author": {
          "type": "string"
        },
        "BookCaseID": {
          "type": "integer",
          "format": "int64"
        },
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "Name": {
          "type": "string"
        },
        "Publisher": {
          "type": "string"
        }
      }
    },
    "BookCase": {
      "type": "object",
      "properties": {
        "BookCaseID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BookCases": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BookCase"
      }
    },
    "Books": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Book"
      }
    },
    "Fail": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "integer",
          "format": "int64"
        },
        "Message": {
          "type": "string"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Simple Library API Server",
    "title": "Library API",
    "contact": {
      "email": "cryptocoin62@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/": {
      "get": {
        "produces": [
          "text/html"
        ],
        "tags": [
          "home"
        ],
        "summary": "Root of project",
        "operationId": "home",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Get book by id",
        "operationId": "get_book_by_id",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "books"
        ],
        "summary": "Delete book",
        "operationId": "delete_book",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/bookcases": {
      "get": {
        "tags": [
          "bookcases"
        ],
        "summary": "Show all bookcases",
        "operationId": "list_all_bookcases",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/BookCases"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "bookcases"
        ],
        "summary": "Update an existing bookcase",
        "operationId": "put_bookcase",
        "parameters": [
          {
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookCase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "bookcases"
        ],
        "summary": "Add bookcase",
        "operationId": "add_bookcase",
        "parameters": [
          {
            "name": "add",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BookCase"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/bookcases/{id}": {
      "get": {
        "tags": [
          "bookcases"
        ],
        "summary": "List all books in bookcase",
        "operationId": "list_all_books_from_bookcases",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "bookcases"
        ],
        "summary": "Delete bookcase",
        "operationId": "delete_bookcase",
        "parameters": [
          {
            "type": "integer",
            "format": "int64",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "books"
        ],
        "summary": "Show all books",
        "operationId": "list_all_books",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Books"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "put": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "books"
        ],
        "summary": "Update an existing book",
        "operationId": "put_book",
        "parameters": [
          {
            "name": "update",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      },
      "post": {
        "consumes": [
          "application/json; charset=utf-8"
        ],
        "produces": [
          "application/json; charset=utf-8"
        ],
        "tags": [
          "books"
        ],
        "summary": "Add book",
        "operationId": "add_book",
        "parameters": [
          {
            "name": "add",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "properties": {
        "Author": {
          "type": "string"
        },
        "BookCaseID": {
          "type": "integer",
          "format": "int64"
        },
        "ID": {
          "type": "integer",
          "format": "int64"
        },
        "Name": {
          "type": "string"
        },
        "Publisher": {
          "type": "string"
        }
      }
    },
    "BookCase": {
      "type": "object",
      "properties": {
        "BookCaseID": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "BookCases": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/BookCase"
      }
    },
    "Books": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Book"
      }
    },
    "Fail": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "integer",
          "format": "int64"
        },
        "Message": {
          "type": "string"
        }
      }
    }
  }
}`))
}

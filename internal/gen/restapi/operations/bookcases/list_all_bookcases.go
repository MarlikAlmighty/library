// Code generated by go-swagger; DO NOT EDIT.

package bookcases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// ListAllBookcasesHandlerFunc turns a function with the right signature into a list all bookcases handler
type ListAllBookcasesHandlerFunc func(ListAllBookcasesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ListAllBookcasesHandlerFunc) Handle(params ListAllBookcasesParams) middleware.Responder {
	return fn(params)
}

// ListAllBookcasesHandler interface for that can handle valid list all bookcases params
type ListAllBookcasesHandler interface {
	Handle(ListAllBookcasesParams) middleware.Responder
}

// NewListAllBookcases creates a new http.Handler for the list all bookcases operation
func NewListAllBookcases(ctx *middleware.Context, handler ListAllBookcasesHandler) *ListAllBookcases {
	return &ListAllBookcases{Context: ctx, Handler: handler}
}

/* ListAllBookcases swagger:route GET /bookcases bookcases listAllBookcases

Show all bookcases

*/
type ListAllBookcases struct {
	Context *middleware.Context
	Handler ListAllBookcasesHandler
}

func (o *ListAllBookcases) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewListAllBookcasesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// Code generated by go-swagger; DO NOT EDIT.

package bookcases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DeleteBookcaseHandlerFunc turns a function with the right signature into a delete bookcase handler
type DeleteBookcaseHandlerFunc func(DeleteBookcaseParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteBookcaseHandlerFunc) Handle(params DeleteBookcaseParams) middleware.Responder {
	return fn(params)
}

// DeleteBookcaseHandler interface for that can handle valid delete bookcase params
type DeleteBookcaseHandler interface {
	Handle(DeleteBookcaseParams) middleware.Responder
}

// NewDeleteBookcase creates a new http.Handler for the delete bookcase operation
func NewDeleteBookcase(ctx *middleware.Context, handler DeleteBookcaseHandler) *DeleteBookcase {
	return &DeleteBookcase{Context: ctx, Handler: handler}
}

/* DeleteBookcase swagger:route DELETE /bookcases/{id} bookcases deleteBookcase

Delete bookcase

*/
type DeleteBookcase struct {
	Context *middleware.Context
	Handler DeleteBookcaseHandler
}

func (o *DeleteBookcase) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDeleteBookcaseParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

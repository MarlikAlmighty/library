// Code generated by go-docs; DO NOT EDIT.

package restapi

// This file was generated by the docs tool.
// Editing this file might prove futile when you re-run the docs generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the docs document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the docs document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json; charset=utf-8"
  ],
  "produces": [
    "application/json; charset=utf-8"
  ],
  "schemes": [
    "http"
  ],
  "docs": "2.0",
  "info": {
    "description": "Simple Library API Server",
    "title": "Library API",
    "contact": {
      "email": "cryptocoin62@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/book/id/{id}": {
      "get": {
        "tags": [
          "bookID"
        ],
        "summary": "Handler for seek book on id",
        "operationId": "bookID",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The ID of book.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/book/name/{name}": {
      "get": {
        "tags": [
          "bookName"
        ],
        "summary": "Handler for seek book on name",
        "operationId": "bookName",
        "parameters": [
          {
            "type": "string",
            "description": "The name of book.",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/page/{id}": {
      "get": {
        "tags": [
          "pageID"
        ],
        "summary": "Handler for seek page on id",
        "operationId": "pageID",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The ID of page.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/shelves": {
      "get": {
        "tags": [
          "shelves"
        ],
        "summary": "Handler for show list shelves",
        "operationId": "shelves",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Library"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/shelves/{id}": {
      "get": {
        "tags": [
          "shelvesID"
        ],
        "summary": "Handler for list books on shelf",
        "operationId": "shelvesID",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "Get books by shelves ID.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Shelf"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "properties": {
        "Author": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "NumPages": {
          "type": "integer",
          "format": "int32"
        },
        "Pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Page"
          }
        },
        "Publisher": {
          "type": "string"
        },
        "ShelvesID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Fail": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Library": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Shelf"
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "BooksID": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Number": {
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "string"
        }
      }
    },
    "Shelf": {
      "type": "object",
      "properties": {
        "Books": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Book"
          }
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "NameShelfs": {
          "type": "string"
        },
        "Number": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json; charset=utf-8"
  ],
  "produces": [
    "application/json; charset=utf-8"
  ],
  "schemes": [
    "http"
  ],
  "docs": "2.0",
  "info": {
    "description": "Simple Library API Server",
    "title": "Library API",
    "contact": {
      "email": "cryptocoin62@gmail.com"
    },
    "version": "1.0.0"
  },
  "host": "localhost",
  "basePath": "/",
  "paths": {
    "/book/id/{id}": {
      "get": {
        "tags": [
          "bookID"
        ],
        "summary": "Handler for seek book on id",
        "operationId": "bookID",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The ID of book.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/book/name/{name}": {
      "get": {
        "tags": [
          "bookName"
        ],
        "summary": "Handler for seek book on name",
        "operationId": "bookName",
        "parameters": [
          {
            "type": "string",
            "description": "The name of book.",
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Book"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/page/{id}": {
      "get": {
        "tags": [
          "pageID"
        ],
        "summary": "Handler for seek page on id",
        "operationId": "pageID",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "The ID of page.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Page"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/shelves": {
      "get": {
        "tags": [
          "shelves"
        ],
        "summary": "Handler for show list shelves",
        "operationId": "shelves",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Library"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    },
    "/shelves/{id}": {
      "get": {
        "tags": [
          "shelvesID"
        ],
        "summary": "Handler for list books on shelf",
        "operationId": "shelvesID",
        "parameters": [
          {
            "minimum": 1,
            "type": "integer",
            "description": "Get books by shelves ID.",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Shelf"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Fail"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "properties": {
        "Author": {
          "type": "string"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "NumPages": {
          "type": "integer",
          "format": "int32"
        },
        "Pages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Page"
          }
        },
        "Publisher": {
          "type": "string"
        },
        "ShelvesID": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "Fail": {
      "type": "object",
      "properties": {
        "Code": {
          "type": "integer",
          "format": "int32"
        },
        "Message": {
          "type": "string"
        }
      }
    },
    "Library": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Shelf"
      }
    },
    "Page": {
      "type": "object",
      "properties": {
        "BooksID": {
          "type": "integer",
          "format": "int32"
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "Number": {
          "type": "integer",
          "format": "int32"
        },
        "Text": {
          "type": "string"
        }
      }
    },
    "Shelf": {
      "type": "object",
      "properties": {
        "Books": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Book"
          }
        },
        "ID": {
          "type": "integer",
          "format": "int32"
        },
        "NameShelfs": {
          "type": "string"
        },
        "Number": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
  }
}`))
}

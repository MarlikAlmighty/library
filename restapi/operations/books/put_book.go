// Code generated by go-swagger; DO NOT EDIT.

package books

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// PutBookHandlerFunc turns a function with the right signature into a put book handler
type PutBookHandlerFunc func(PutBookParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PutBookHandlerFunc) Handle(params PutBookParams) middleware.Responder {
	return fn(params)
}

// PutBookHandler interface for that can handle valid put book params
type PutBookHandler interface {
	Handle(PutBookParams) middleware.Responder
}

// NewPutBook creates a new http.Handler for the put book operation
func NewPutBook(ctx *middleware.Context, handler PutBookHandler) *PutBook {
	return &PutBook{Context: ctx, Handler: handler}
}

/* PutBook swagger:route PUT /books books putBook

Update an existing book

*/
type PutBook struct {
	Context *middleware.Context
	Handler PutBookHandler
}

func (o *PutBook) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewPutBookParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}

// Code generated by go-swagger; DO NOT EDIT.

package book_id

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/MarlikAlmighty/library/models"
)

// BookIDOKCode is the HTTP code returned for type BookIDOK
const BookIDOKCode int = 200

/*BookIDOK Successful response

swagger:response bookIdOK
*/
type BookIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.Book `json:"body,omitempty"`
}

// NewBookIDOK creates BookIDOK with default headers values
func NewBookIDOK() *BookIDOK {

	return &BookIDOK{}
}

// WithPayload adds the payload to the book Id o k response
func (o *BookIDOK) WithPayload(payload *models.Book) *BookIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book Id o k response
func (o *BookIDOK) SetPayload(payload *models.Book) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BookIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// BookIDBadRequestCode is the HTTP code returned for type BookIDBadRequest
const BookIDBadRequestCode int = 400

/*BookIDBadRequest Bad request

swagger:response bookIdBadRequest
*/
type BookIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Fail `json:"body,omitempty"`
}

// NewBookIDBadRequest creates BookIDBadRequest with default headers values
func NewBookIDBadRequest() *BookIDBadRequest {

	return &BookIDBadRequest{}
}

// WithPayload adds the payload to the book Id bad request response
func (o *BookIDBadRequest) WithPayload(payload *models.Fail) *BookIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the book Id bad request response
func (o *BookIDBadRequest) SetPayload(payload *models.Fail) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *BookIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

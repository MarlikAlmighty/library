// Code generated by go-swagger; DO NOT EDIT.

package shelves_id

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// ShelvesIDHandlerFunc turns a function with the right signature into a shelves ID handler
type ShelvesIDHandlerFunc func(ShelvesIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn ShelvesIDHandlerFunc) Handle(params ShelvesIDParams) middleware.Responder {
	return fn(params)
}

// ShelvesIDHandler interface for that can handle valid shelves ID params
type ShelvesIDHandler interface {
	Handle(ShelvesIDParams) middleware.Responder
}

// NewShelvesID creates a new http.Handler for the shelves ID operation
func NewShelvesID(ctx *middleware.Context, handler ShelvesIDHandler) *ShelvesID {
	return &ShelvesID{Context: ctx, Handler: handler}
}

/*ShelvesID swagger:route GET /shelves/{id} shelvesID shelvesId

Handler for list books on shelf

*/
type ShelvesID struct {
	Context *middleware.Context
	Handler ShelvesIDHandler
}

func (o *ShelvesID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewShelvesIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

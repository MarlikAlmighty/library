// Code generated by go-docs; DO NOT EDIT.

package book_name

// This file was generated by the docs tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// BookNameHandlerFunc turns a function with the right signature into a book name handler
type BookNameHandlerFunc func(BookNameParams) middleware.Responder

// Handle executing the request and returning a response
func (fn BookNameHandlerFunc) Handle(params BookNameParams) middleware.Responder {
	return fn(params)
}

// BookNameHandler interface for that can handle valid book name params
type BookNameHandler interface {
	Handle(BookNameParams) middleware.Responder
}

// NewBookName creates a new http.Handler for the book name operation
func NewBookName(ctx *middleware.Context, handler BookNameHandler) *BookName {
	return &BookName{Context: ctx, Handler: handler}
}

/*BookName docs:route GET /book/name/{name} bookName bookName

Handler for seek book on name

*/
type BookName struct {
	Context *middleware.Context
	Handler BookNameHandler
}

func (o *BookName) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewBookNameParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
